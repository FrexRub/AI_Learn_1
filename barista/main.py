import asyncio
import json
from langchain_openai import ChatOpenAI

from core.config import setting
from llm.agent import VacancyClassificationAgent


def get_openrouter_llm(model="gpt-4o-mini"):
    return ChatOpenAI(
        model=model,
        api_key=setting.llm.openrouter_api_key.get_secret_value(),
        base_url="https://api.aitunnel.ru/v1/",
        temperature=0,
    )


async def main():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–∞"""
    agent = VacancyClassificationAgent()

    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã
    test_cases = [
        "–¢—Ä–µ–±—É–µ—Ç—Å—è Python —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Django. –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –ø–æ–ª–Ω—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å.",
        "–ò—â—É –∑–∞–∫–∞–∑—ã –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –∏ —Ñ–∏—Ä–º–µ–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è. –†–∞–±–æ—Ç–∞—é –≤ Adobe Illustrator.",
        "–ù—É–∂–µ–Ω 3D-–∞–Ω–∏–º–∞—Ç–æ—Ä –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ —Ä–æ–ª–∏–∫–∞.",
        "–†–µ–∑—é–º–µ: –æ–ø—ã—Ç–Ω—ã–π –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥, –∏—â—É —É–¥–∞–ª–µ–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É –≤ —Å—Ñ–µ—Ä–µ digital-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞",
        "–ò—â–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ React –≤ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –æ—Å–Ω–æ–≤–µ",
    ]

    print("ü§ñ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∞–≥–µ–Ω—Ç–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π\n")

    for i, description in enumerate(test_cases, 1):
        print(f"üìã –¢–µ—Å—Ç {i}:")
        print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {description}")

        try:
            result = await agent.classify(description)
            print("–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏:")
            print(json.dumps(result, ensure_ascii=False, indent=2))

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

        print("-" * 80)


if __name__ == "__main__":
    # llm = get_openrouter_llm(model="gpt-4o-mini")
    # response = llm.invoke("–ö—Ç–æ —Ç—ã?")
    # print(response.content)

    asyncio.run(main())
